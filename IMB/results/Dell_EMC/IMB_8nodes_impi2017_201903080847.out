#------------------------------------------------------------
#    Intel(R) MPI Benchmarks 2019 Update 1, MPI-1 part    
#------------------------------------------------------------
# Date                  : Fri Mar  8 08:47:32 2019
# Machine               : x86_64
# System                : Linux
# Release               : 3.10.0-862.14.4.el7.x86_64
# Version               : #1 SMP Tue Sep 25 14:32:52 CDT 2018
# MPI Version           : 3.1
# MPI Thread Environment: 


# Calling sequence was: 

# ./IMB-MPI1 -npmin 256 PingPong Alltoallv Allgatherv 

# Minimum message length in bytes:   0
# Maximum message length in bytes:   4194304
#
# MPI_Datatype                   :   MPI_BYTE 
# MPI_Datatype for reductions    :   MPI_FLOAT 
# MPI_Op                         :   MPI_SUM  
# 
# 

# List of Benchmarks to run:

# PingPong
# Alltoallv
# Allgatherv

#---------------------------------------------------
# Benchmarking PingPong 
# #processes = 2 
# ( 254 additional processes waiting in MPI_Barrier)
#---------------------------------------------------
       #bytes #repetitions      t[usec]   Mbytes/sec
            0         1000         0.67         0.00
            1         1000         0.75         1.33
            2         1000         0.75         2.65
            4         1000         0.76         5.27
            8         1000         0.75        10.61
           16         1000         0.75        21.25
           32         1000         0.76        42.07
           64         1000         0.85        75.29
          128         1000         0.97       131.89
          256         1000         0.96       265.81
          512         1000         1.04       493.73
         1024         1000         1.15       892.74
         2048         1000         1.25      1634.47
         4096         1000         1.87      2193.41
         8192         1000         2.86      2865.34
        16384         1000         4.87      3361.52
        32768         1000         8.42      3890.97
        65536          640         6.12     10709.31
       131072          320        10.04     13050.10
       262144          160        17.92     14629.68
       524288           80        38.23     13715.50
      1048576           40        97.14     10794.74
      2097152           20       233.58      8978.35
      4194304           10       465.50      9010.31

#----------------------------------------------------------------
# Benchmarking Alltoallv 
# #processes = 256 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            0         1000         2.45         2.64         2.49
            1         1000       154.72       170.94       161.48
            2         1000       152.96       163.02       158.65
            4         1000       156.01       170.06       165.28
            8         1000       177.01       186.88       182.69
           16         1000       239.85       277.41       255.97
           32         1000       244.76       293.81       269.80
           64         1000       237.37       259.28       248.09
          128         1000       302.37       313.61       309.64
          256         1000       384.06       398.92       395.60
          512         1000       703.29       735.97       721.06
         1024         1000      1215.55      1274.01      1245.26
         2048         1000      2080.40      2100.48      2090.56
         4096         1000      3864.83      3891.86      3880.80
         8192         1000      7828.83      7891.05      7862.78
        16384          788     11805.87     12048.46     11952.48
        32768          385     23381.33     24049.03     23786.87
        65536          218     45038.95     45581.93     45302.37
       131072          114     86366.44     87413.24     86948.43
       262144           54    183785.43    186133.86    184960.67
       524288           24    401963.40    409640.92    405955.46
      1048576           14    775532.69    791463.73    783749.91
      2097152            7   1481208.15   1526507.31   1504079.29
      4194304 out-of-mem.; needed X=   2.001 GB; use flag "-mem X" or MAX_MEM_USAGE>=X (IMB_mem_info.h)

#----------------------------------------------------------------
# Benchmarking Allgatherv 
# #processes = 256 
#----------------------------------------------------------------
       #bytes #repetitions  t_min[usec]  t_max[usec]  t_avg[usec]
            0         1000         0.44         0.70         0.48
            1         1000        12.93        14.96        13.78
            2         1000        14.08        16.01        14.84
            4         1000        15.70        17.79        16.55
            8         1000        18.68        20.82        19.38
           16         1000        25.32        27.21        26.20
           32         1000        20.15        47.67        39.59
           64         1000        25.31        78.15        65.36
          128         1000        87.74       115.62       103.54
          256         1000       210.96       220.88       216.29
          512         1000       356.82       370.12       363.38
         1024         1000       637.30       660.01       645.92
         2048         1000      1160.28      1214.33      1185.06
         4096         1000      1818.54      1937.86      1885.25
         8192         1000      2736.10      2886.80      2819.04
        16384         1000      4952.44      5247.43      5112.36
        32768          925      9896.57     10618.14     10248.02
        65536          605     14657.67     16048.75     15139.42
       131072          320     28622.41     29930.76     29214.18
       262144          160     52695.71     55664.83     53974.63
       524288           80     97428.59    103618.10     99761.09
      1048576           40    183950.29    194105.48    188210.20
      2097152           20    378140.38    393389.11    384601.13
      4194304 out-of-mem.; needed X=   1.005 GB; use flag "-mem X" or MAX_MEM_USAGE>=X (IMB_mem_info.h)


# All processes entering MPI_Finalize

